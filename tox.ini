# SPDX-License-Identifier: Apache-2.0

[tox]
# py3-unit runs unit tests with 'python3'
# py311-unit runs the same tests with 'python3.11'
envlist = fmt, lint, spellcheck, py3-{unit, functional}
minversion = 4.4

[testenv]
description = run tests (unit, unitcov, functional)
# Use PyTorch CPU build instead of CUDA build in test envs. CUDA dependencies
# are huge. This reduces venv from 5.7 GB to 1.5 GB.
setenv =
    PIP_EXTRA_INDEX_URL=https://download.pytorch.org/whl/cpu
package = wheel
wheel_build_env = pkg
deps = -r requirements-dev.txt
commands =
    ilab --version
    {envpython} -m instructlab --version
    unit: {envpython} -m pytest {posargs:tests}
    unitcov: {envpython} -W error::UserWarning -m pytest --cov=instructlab --cov-report term --cov-report=html:coverage-{env_name} --cov-report=xml:coverage-{env_name}.xml --html=durations/{env_name}.html {posargs:tests -m "not (examples or slow)"}
    functional: ./scripts/functional-tests.sh
allowlist_externals =
    functional: ./scripts/functional-tests.sh

# "lint" and "fmt" targets don't build and install the project to speed up
# testing. The "fmt" only needs pre-commit.
[testenv:lint]
description = lint with pylint
skip_install = true
skipsdist = true
deps = -r requirements-dev.txt
commands =
    {envpython} -m pylint src/instructlab/ tests/

[testenv:fmt]
description = format with pre-commit
skip_install = true
skipsdist = true
deps =
    pre-commit>=3.0.4,<4.0
commands =
    ./scripts/fmt.sh
allowlist_externals = ./scripts/fmt.sh

[testenv:functional]
description = run functional tests
commands =
    ./scripts/functional-tests.sh
allowlist_externals = ./scripts/functional-tests.sh

[testenv:spellcheck]
description = spell check (needs 'aspell' or 'hunspell' command)
skip_install = true
skipsdist = true
deps =
    pyspelling
commands =
    {envpython} -m pyspelling --config {toxinidir}/.spellcheck.yml
